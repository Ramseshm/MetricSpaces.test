# -*- coding: utf-8 -*-
"""Main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wMOza5siY7szftCoKze8zRphMLQ_MruP
"""

import numpy as np
import json
import random
from ..espacio import String as space
#from . import Vectors as space


#cargar bd---------------------------------
dbloc=""
#--------------------------------------------

"""# Pivotes"""

def inter(l):
  s1=set(l[0])
  for i in range(1,len(l)):
    s1=s1.intersection(l[i])
  return list(s1)

def Pivotes(np):
  ##seleccionar pivotes
  piv=list()
  for i in range(1,np):
    piv.append(random.randint(1,(space.tam())))

  #calcular distancias de pivotes
  distpiv= np.zeros([len(piv),space.tam()]).astype(int)
  for i in range(len(distpiv)):
    for j in range(1,len(distpiv[i])):

      distpiv[i,j]=space.distance(piv[i],j)
 
  indice={"db":dbloc,"piv":piv,"tabla":distpiv.tolist()}

  #print(len(indice["tabla"]))
  return indice



def Build(loc,np,indexname="indexPivotes"):
  #data=Pivotes()
  global dbloc
  dbloc=loc
  space.loadDB(dbloc)
  data=Pivotes(np)
  path="./MetricSpaces/"+indexname+".json"
  with open(path, 'w') as f:
    json.dump(data, f,indent=4)
